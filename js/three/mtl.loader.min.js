THREE.MTLLoader=function(manager){THREE.Loader.call(this,manager)},THREE.MTLLoader.prototype=Object.assign(Object.create(THREE.Loader.prototype),{constructor:THREE.MTLLoader,load:function(url,onLoad,onProgress,onError){var scope=this,path=""===this.path?THREE.LoaderUtils.extractUrlBase(url):this.path,loader=new THREE.FileLoader(this.manager);loader.setPath(this.path),loader.setRequestHeader(this.requestHeader),loader.setWithCredentials(this.withCredentials),loader.load(url,(function(text){try{onLoad(scope.parse(text,path))}catch(e){onError?onError(e):console.error(e),scope.manager.itemError(url)}}),onProgress,onError)},setMaterialOptions:function(value){return this.materialOptions=value,this},parse:function(text,path){for(var lines=text.split("\n"),info={},delimiter_pattern=/\s+/,materialsInfo={},i=0;i<lines.length;i++){var line=lines[i];if(0!==(line=line.trim()).length&&"#"!==line.charAt(0)){var pos=line.indexOf(" "),key=pos>=0?line.substring(0,pos):line;key=key.toLowerCase();var value=pos>=0?line.substring(pos+1):"";if(value=value.trim(),"newmtl"===key)info={name:value},materialsInfo[value]=info;else if("ka"===key||"kd"===key||"ks"===key||"ke"===key){var ss=value.split(delimiter_pattern,3);info[key]=[parseFloat(ss[0]),parseFloat(ss[1]),parseFloat(ss[2])]}else info[key]=value}}var materialCreator=new THREE.MTLLoader.MaterialCreator(this.resourcePath||path,this.materialOptions);return materialCreator.setCrossOrigin(this.crossOrigin),materialCreator.setManager(this.manager),materialCreator.setMaterials(materialsInfo),materialCreator}}),THREE.MTLLoader.MaterialCreator=function(baseUrl,options){this.baseUrl=baseUrl||"",this.options=options,this.materialsInfo={},this.materials={},this.materialsArray=[],this.nameLookup={},this.side=this.options&&this.options.side?this.options.side:THREE.FrontSide,this.wrap=this.options&&this.options.wrap?this.options.wrap:THREE.RepeatWrapping},THREE.MTLLoader.MaterialCreator.prototype={constructor:THREE.MTLLoader.MaterialCreator,crossOrigin:"anonymous",setCrossOrigin:function(value){return this.crossOrigin=value,this},setManager:function(value){this.manager=value},setMaterials:function(materialsInfo){this.materialsInfo=this.convert(materialsInfo),this.materials={},this.materialsArray=[],this.nameLookup={}},convert:function(materialsInfo){if(!this.options)return materialsInfo;var converted={};for(var mn in materialsInfo){var mat=materialsInfo[mn],covmat={};for(var prop in converted[mn]=covmat,mat){var save=!0,value=mat[prop],lprop=prop.toLowerCase();switch(lprop){case"kd":case"ka":case"ks":this.options&&this.options.normalizeRGB&&(value=[value[0]/255,value[1]/255,value[2]/255]),this.options&&this.options.ignoreZeroRGBs&&0===value[0]&&0===value[1]&&0===value[2]&&(save=!1)}save&&(covmat[lprop]=value)}}return converted},preload:function(){for(var mn in this.materialsInfo)this.create(mn)},getIndex:function(materialName){return this.nameLookup[materialName]},getAsArray:function(){var index=0;for(var mn in this.materialsInfo)this.materialsArray[index]=this.create(mn),this.nameLookup[mn]=index,index++;return this.materialsArray},create:function(materialName){return void 0===this.materials[materialName]&&this.createMaterial_(materialName),this.materials[materialName]},createMaterial_:function(materialName){var scope=this,mat=this.materialsInfo[materialName],params={name:materialName,side:this.side};function resolveURL(baseUrl,url){return"string"!=typeof url||""===url?"":/^https?:\/\//i.test(url)?url:baseUrl+url}function setMapForType(mapType,value){if(!params[mapType]){var texParams=scope.getTextureParams(value,params),map=scope.loadTexture(resolveURL(scope.baseUrl,texParams.url));map.repeat.copy(texParams.scale),map.offset.copy(texParams.offset),map.wrapS=scope.wrap,map.wrapT=scope.wrap,params[mapType]=map}}for(var prop in mat){var value=mat[prop],n;if(""!==value)switch(prop.toLowerCase()){case"kd":params.color=(new THREE.Color).fromArray(value);break;case"ks":params.specular=(new THREE.Color).fromArray(value);break;case"ke":params.emissive=(new THREE.Color).fromArray(value);break;case"map_kd":setMapForType("map",value);break;case"map_ks":setMapForType("specularMap",value);break;case"map_ke":setMapForType("emissiveMap",value);break;case"norm":setMapForType("normalMap",value);break;case"map_bump":case"bump":setMapForType("bumpMap",value);break;case"map_d":setMapForType("alphaMap",value),params.transparent=!0;break;case"ns":params.shininess=parseFloat(value);break;case"d":(n=parseFloat(value))<1&&(params.opacity=n,params.transparent=!0);break;case"tr":n=parseFloat(value),this.options&&this.options.invertTrProperty&&(n=1-n),n>0&&(params.opacity=1-n,params.transparent=!0)}}return this.materials[materialName]=new THREE.MeshPhongMaterial(params),this.materials[materialName]},getTextureParams:function(value,matParams){var texParams={scale:new THREE.Vector2(1,1),offset:new THREE.Vector2(0,0)},items=value.split(/\s+/),pos;return(pos=items.indexOf("-bm"))>=0&&(matParams.bumpScale=parseFloat(items[pos+1]),items.splice(pos,2)),(pos=items.indexOf("-s"))>=0&&(texParams.scale.set(parseFloat(items[pos+1]),parseFloat(items[pos+2])),items.splice(pos,4)),(pos=items.indexOf("-o"))>=0&&(texParams.offset.set(parseFloat(items[pos+1]),parseFloat(items[pos+2])),items.splice(pos,4)),texParams.url=items.join(" ").trim(),texParams},loadTexture:function(url,mapping,onLoad,onProgress,onError){var texture,manager=void 0!==this.manager?this.manager:THREE.DefaultLoadingManager,loader=manager.getHandler(url);return null===loader&&(loader=new THREE.TextureLoader(manager)),loader.setCrossOrigin&&loader.setCrossOrigin(this.crossOrigin),texture=loader.load(url,onLoad,onProgress,onError),void 0!==mapping&&(texture.mapping=mapping),texture}};