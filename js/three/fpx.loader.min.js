THREE.FBXLoader=function(){var fbxTree,connections,sceneGraph;function FBXLoader(manager){THREE.Loader.call(this,manager)}function FBXTreeParser(textureLoader,manager){this.textureLoader=textureLoader,this.manager=manager}function GeometryParser(){}function AnimationParser(){}function TextParser(){}function BinaryParser(){}function BinaryReader(buffer,littleEndian){this.dv=new DataView(buffer),this.offset=0,this.littleEndian=void 0===littleEndian||littleEndian}function FBXTree(){}function isFbxFormatBinary(buffer){var CORRECT="Kaydara FBX Binary  \0";return buffer.byteLength>=CORRECT.length&&CORRECT===convertArrayBufferToString(buffer,0,CORRECT.length)}function isFbxFormatASCII(text){var CORRECT=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"],cursor=0;function read(offset){var result=text[offset-1];return text=text.slice(cursor+offset),cursor++,result}for(var i=0;i<CORRECT.length;++i){var num;if(read(1)===CORRECT[i])return!1}return!0}function getFbxVersion(text){var versionRegExp=/FBXVersion: (\d+)/,match=text.match(versionRegExp),version;if(match)return parseInt(match[1]);throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function convertFBXTimeToSeconds(time){return time/46186158e3}FBXLoader.prototype=Object.assign(Object.create(THREE.Loader.prototype),{constructor:FBXLoader,load:function(url,onLoad,onProgress,onError){var scope=this,path=""===scope.path?THREE.LoaderUtils.extractUrlBase(url):scope.path,loader=new THREE.FileLoader(this.manager);loader.setPath(scope.path),loader.setResponseType("arraybuffer"),loader.setRequestHeader(scope.requestHeader),loader.setWithCredentials(scope.withCredentials),loader.load(url,(function(buffer){try{onLoad(scope.parse(buffer,path))}catch(e){onError?onError(e):console.error(e),scope.manager.itemError(url)}}),onProgress,onError)},parse:function(FBXBuffer,path){if(isFbxFormatBinary(FBXBuffer))fbxTree=(new BinaryParser).parse(FBXBuffer);else{var FBXText=convertArrayBufferToString(FBXBuffer);if(!isFbxFormatASCII(FBXText))throw new Error("THREE.FBXLoader: Unknown format.");if(getFbxVersion(FBXText)<7e3)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+getFbxVersion(FBXText));fbxTree=(new TextParser).parse(FBXText)}var textureLoader;return new FBXTreeParser(new THREE.TextureLoader(this.manager).setPath(this.resourcePath||path).setCrossOrigin(this.crossOrigin),this.manager).parse(fbxTree)}}),FBXTreeParser.prototype={constructor:FBXTreeParser,parse:function(){connections=this.parseConnections();var images=this.parseImages(),textures=this.parseTextures(images),materials=this.parseMaterials(textures),deformers=this.parseDeformers(),geometryMap=(new GeometryParser).parse(deformers);return this.parseScene(deformers,geometryMap,materials),sceneGraph},parseConnections:function(){var connectionMap=new Map,rawConnections;"Connections"in fbxTree&&fbxTree.Connections.connections.forEach((function(rawConnection){var fromID=rawConnection[0],toID=rawConnection[1],relationship=rawConnection[2];connectionMap.has(fromID)||connectionMap.set(fromID,{parents:[],children:[]});var parentRelationship={ID:toID,relationship:relationship};connectionMap.get(fromID).parents.push(parentRelationship),connectionMap.has(toID)||connectionMap.set(toID,{parents:[],children:[]});var childRelationship={ID:fromID,relationship:relationship};connectionMap.get(toID).children.push(childRelationship)}));return connectionMap},parseImages:function(){var images={},blobs={};if("Video"in fbxTree.Objects){var videoNodes=fbxTree.Objects.Video;for(var nodeID in videoNodes){var videoNode=videoNodes[nodeID],id;if(images[id=parseInt(nodeID)]=videoNode.RelativeFilename||videoNode.Filename,"Content"in videoNode){var arrayBufferContent=videoNode.Content instanceof ArrayBuffer&&videoNode.Content.byteLength>0,base64Content="string"==typeof videoNode.Content&&""!==videoNode.Content;if(arrayBufferContent||base64Content){var image=this.parseImage(videoNodes[nodeID]);blobs[videoNode.RelativeFilename||videoNode.Filename]=image}}}}for(var id in images){var filename=images[id];void 0!==blobs[filename]?images[id]=blobs[filename]:images[id]=images[id].split("\\").pop()}return images},parseImage:function(videoNode){var content=videoNode.Content,fileName=videoNode.RelativeFilename||videoNode.Filename,extension=fileName.slice(fileName.lastIndexOf(".")+1).toLowerCase(),type;switch(extension){case"bmp":type="image/bmp";break;case"jpg":case"jpeg":type="image/jpeg";break;case"png":type="image/png";break;case"tif":type="image/tiff";break;case"tga":null===this.manager.getHandler(".tga")&&console.warn("FBXLoader: TGA loader not found, skipping ",fileName),type="image/tga";break;default:return void console.warn('FBXLoader: Image type "'+extension+'" is not supported.')}if("string"==typeof content)return"data:"+type+";base64,"+content;var array=new Uint8Array(content);return window.URL.createObjectURL(new Blob([array],{type:type}))},parseTextures:function(images){var textureMap=new Map;if("Texture"in fbxTree.Objects){var textureNodes=fbxTree.Objects.Texture;for(var nodeID in textureNodes){var texture=this.parseTexture(textureNodes[nodeID],images);textureMap.set(parseInt(nodeID),texture)}}return textureMap},parseTexture:function(textureNode,images){var texture=this.loadTexture(textureNode,images);texture.ID=textureNode.id,texture.name=textureNode.attrName;var wrapModeU=textureNode.WrapModeU,wrapModeV=textureNode.WrapModeV,valueU=void 0!==wrapModeU?wrapModeU.value:0,valueV=void 0!==wrapModeV?wrapModeV.value:0;if(texture.wrapS=0===valueU?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,texture.wrapT=0===valueV?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,"Scaling"in textureNode){var values=textureNode.Scaling.value;texture.repeat.x=values[0],texture.repeat.y=values[1]}return texture},loadTexture:function(textureNode,images){var fileName,currentPath=this.textureLoader.path,children=connections.get(textureNode.id).children,texture;void 0!==children&&children.length>0&&void 0!==images[children[0].ID]&&(0!==(fileName=images[children[0].ID]).indexOf("blob:")&&0!==fileName.indexOf("data:")||this.textureLoader.setPath(void 0));var extension=textureNode.FileName.slice(-3).toLowerCase();if("tga"===extension){var loader=this.manager.getHandler(".tga");null===loader?(console.warn("FBXLoader: TGA loader not found, creating placeholder texture for",textureNode.RelativeFilename),texture=new THREE.Texture):texture=loader.load(fileName)}else"psd"===extension?(console.warn("FBXLoader: PSD textures are not supported, creating placeholder texture for",textureNode.RelativeFilename),texture=new THREE.Texture):texture=this.textureLoader.load(fileName);return this.textureLoader.setPath(currentPath),texture},parseMaterials:function(textureMap){var materialMap=new Map;if("Material"in fbxTree.Objects){var materialNodes=fbxTree.Objects.Material;for(var nodeID in materialNodes){var material=this.parseMaterial(materialNodes[nodeID],textureMap);null!==material&&materialMap.set(parseInt(nodeID),material)}}return materialMap},parseMaterial:function(materialNode,textureMap){var ID=materialNode.id,name=materialNode.attrName,type=materialNode.ShadingModel;if("object"==typeof type&&(type=type.value),!connections.has(ID))return null;var parameters=this.parseParameters(materialNode,textureMap,ID),material;switch(type.toLowerCase()){case"phong":material=new THREE.MeshPhongMaterial;break;case"lambert":material=new THREE.MeshLambertMaterial;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',type),material=new THREE.MeshPhongMaterial}return material.setValues(parameters),material.name=name,material},parseParameters:function(materialNode,textureMap,ID){var parameters={};materialNode.BumpFactor&&(parameters.bumpScale=materialNode.BumpFactor.value),materialNode.Diffuse?parameters.color=(new THREE.Color).fromArray(materialNode.Diffuse.value):!materialNode.DiffuseColor||"Color"!==materialNode.DiffuseColor.type&&"ColorRGB"!==materialNode.DiffuseColor.type||(parameters.color=(new THREE.Color).fromArray(materialNode.DiffuseColor.value)),materialNode.DisplacementFactor&&(parameters.displacementScale=materialNode.DisplacementFactor.value),materialNode.Emissive?parameters.emissive=(new THREE.Color).fromArray(materialNode.Emissive.value):!materialNode.EmissiveColor||"Color"!==materialNode.EmissiveColor.type&&"ColorRGB"!==materialNode.EmissiveColor.type||(parameters.emissive=(new THREE.Color).fromArray(materialNode.EmissiveColor.value)),materialNode.EmissiveFactor&&(parameters.emissiveIntensity=parseFloat(materialNode.EmissiveFactor.value)),materialNode.Opacity&&(parameters.opacity=parseFloat(materialNode.Opacity.value)),parameters.opacity<1&&(parameters.transparent=!0),materialNode.ReflectionFactor&&(parameters.reflectivity=materialNode.ReflectionFactor.value),materialNode.Shininess&&(parameters.shininess=materialNode.Shininess.value),materialNode.Specular?parameters.specular=(new THREE.Color).fromArray(materialNode.Specular.value):materialNode.SpecularColor&&"Color"===materialNode.SpecularColor.type&&(parameters.specular=(new THREE.Color).fromArray(materialNode.SpecularColor.value));var scope=this;return connections.get(ID).children.forEach((function(child){var type=child.relationship;switch(type){case"Bump":parameters.bumpMap=scope.getTexture(textureMap,child.ID);break;case"Maya|TEX_ao_map":parameters.aoMap=scope.getTexture(textureMap,child.ID);break;case"DiffuseColor":case"Maya|TEX_color_map":parameters.map=scope.getTexture(textureMap,child.ID),parameters.map.encoding=THREE.sRGBEncoding;break;case"DisplacementColor":parameters.displacementMap=scope.getTexture(textureMap,child.ID);break;case"EmissiveColor":parameters.emissiveMap=scope.getTexture(textureMap,child.ID),parameters.emissiveMap.encoding=THREE.sRGBEncoding;break;case"NormalMap":case"Maya|TEX_normal_map":parameters.normalMap=scope.getTexture(textureMap,child.ID);break;case"ReflectionColor":parameters.envMap=scope.getTexture(textureMap,child.ID),parameters.envMap.mapping=THREE.EquirectangularReflectionMapping,parameters.envMap.encoding=THREE.sRGBEncoding;break;case"SpecularColor":parameters.specularMap=scope.getTexture(textureMap,child.ID),parameters.specularMap.encoding=THREE.sRGBEncoding;break;case"TransparentColor":case"TransparencyFactor":parameters.alphaMap=scope.getTexture(textureMap,child.ID),parameters.transparent=!0;break;case"AmbientColor":case"ShininessExponent":case"SpecularFactor":case"VectorDisplacementColor":default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",type)}})),parameters},getTexture:function(textureMap,id){return"LayeredTexture"in fbxTree.Objects&&id in fbxTree.Objects.LayeredTexture&&(console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer."),id=connections.get(id).children[0].ID),textureMap.get(id)},parseDeformers:function(){var skeletons={},morphTargets={};if("Deformer"in fbxTree.Objects){var DeformerNodes=fbxTree.Objects.Deformer;for(var nodeID in DeformerNodes){var deformerNode=DeformerNodes[nodeID],relationships=connections.get(parseInt(nodeID));if("Skin"===deformerNode.attrType){var skeleton=this.parseSkeleton(relationships,DeformerNodes);skeleton.ID=nodeID,relationships.parents.length>1&&console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported."),skeleton.geometryID=relationships.parents[0].ID,skeletons[nodeID]=skeleton}else if("BlendShape"===deformerNode.attrType){var morphTarget={id:nodeID};morphTarget.rawTargets=this.parseMorphTargets(relationships,DeformerNodes),morphTarget.id=nodeID,relationships.parents.length>1&&console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported."),morphTargets[nodeID]=morphTarget}}}return{skeletons:skeletons,morphTargets:morphTargets}},parseSkeleton:function(relationships,deformerNodes){var rawBones=[];return relationships.children.forEach((function(child){var boneNode=deformerNodes[child.ID];if("Cluster"===boneNode.attrType){var rawBone={ID:child.ID,indices:[],weights:[],transformLink:(new THREE.Matrix4).fromArray(boneNode.TransformLink.a)};"Indexes"in boneNode&&(rawBone.indices=boneNode.Indexes.a,rawBone.weights=boneNode.Weights.a),rawBones.push(rawBone)}})),{rawBones:rawBones,bones:[]}},parseMorphTargets:function(relationships,deformerNodes){for(var rawMorphTargets=[],i=0;i<relationships.children.length;i++){var child=relationships.children[i],morphTargetNode=deformerNodes[child.ID],rawMorphTarget={name:morphTargetNode.attrName,initialWeight:morphTargetNode.DeformPercent,id:morphTargetNode.id,fullWeights:morphTargetNode.FullWeights.a};if("BlendShapeChannel"!==morphTargetNode.attrType)return;rawMorphTarget.geoID=connections.get(parseInt(child.ID)).children.filter((function(child){return void 0===child.relationship}))[0].ID,rawMorphTargets.push(rawMorphTarget)}return rawMorphTargets},parseScene:function(deformers,geometryMap,materialMap){sceneGraph=new THREE.Group;var modelMap=this.parseModels(deformers.skeletons,geometryMap,materialMap),modelNodes=fbxTree.Objects.Model,scope=this;modelMap.forEach((function(model){var modelNode=modelNodes[model.ID],parentConnections;scope.setLookAtProperties(model,modelNode),connections.get(model.ID).parents.forEach((function(connection){var parent=modelMap.get(connection.ID);void 0!==parent&&parent.add(model)})),null===model.parent&&sceneGraph.add(model)})),this.bindSkeleton(deformers.skeletons,geometryMap,modelMap),this.createAmbientLight(),this.setupMorphMaterials(),sceneGraph.traverse((function(node){if(node.userData.transformData){node.parent&&(node.userData.transformData.parentMatrixWorld=node.parent.matrix);var transform=generateTransform(node.userData.transformData);node.applyMatrix4(transform)}}));var animations=(new AnimationParser).parse();1===sceneGraph.children.length&&sceneGraph.children[0].isGroup&&(sceneGraph.children[0].animations=animations,sceneGraph=sceneGraph.children[0]),sceneGraph.animations=animations},parseModels:function(skeletons,geometryMap,materialMap){var modelMap=new Map,modelNodes=fbxTree.Objects.Model;for(var nodeID in modelNodes){var id=parseInt(nodeID),node=modelNodes[nodeID],relationships=connections.get(id),model=this.buildSkeleton(relationships,skeletons,id,node.attrName);if(!model){switch(node.attrType){case"Camera":model=this.createCamera(relationships);break;case"Light":model=this.createLight(relationships);break;case"Mesh":model=this.createMesh(relationships,geometryMap,materialMap);break;case"NurbsCurve":model=this.createCurve(relationships,geometryMap);break;case"LimbNode":case"Root":model=new THREE.Bone;break;case"Null":default:model=new THREE.Group}model.name=node.attrName?THREE.PropertyBinding.sanitizeNodeName(node.attrName):"",model.ID=id}this.getTransformData(model,node),modelMap.set(id,model)}return modelMap},buildSkeleton:function(relationships,skeletons,id,name){var bone=null;return relationships.parents.forEach((function(parent){for(var ID in skeletons){var skeleton=skeletons[ID];skeleton.rawBones.forEach((function(rawBone,i){if(rawBone.ID===parent.ID){var subBone=bone;(bone=new THREE.Bone).matrixWorld.copy(rawBone.transformLink),bone.name=name?THREE.PropertyBinding.sanitizeNodeName(name):"",bone.ID=id,skeleton.bones[i]=bone,null!==subBone&&bone.add(subBone)}}))}})),bone},createCamera:function(relationships){var model,cameraAttribute;if(relationships.children.forEach((function(child){var attr=fbxTree.Objects.NodeAttribute[child.ID];void 0!==attr&&(cameraAttribute=attr)})),void 0===cameraAttribute)model=new THREE.Object3D;else{var type=0;void 0!==cameraAttribute.CameraProjectionType&&1===cameraAttribute.CameraProjectionType.value&&(type=1);var nearClippingPlane=1;void 0!==cameraAttribute.NearPlane&&(nearClippingPlane=cameraAttribute.NearPlane.value/1e3);var farClippingPlane=1e3;void 0!==cameraAttribute.FarPlane&&(farClippingPlane=cameraAttribute.FarPlane.value/1e3);var width=window.innerWidth,height=window.innerHeight;void 0!==cameraAttribute.AspectWidth&&void 0!==cameraAttribute.AspectHeight&&(width=cameraAttribute.AspectWidth.value,height=cameraAttribute.AspectHeight.value);var aspect=width/height,fov=45;void 0!==cameraAttribute.FieldOfView&&(fov=cameraAttribute.FieldOfView.value);var focalLength=cameraAttribute.FocalLength?cameraAttribute.FocalLength.value:null;switch(type){case 0:model=new THREE.PerspectiveCamera(fov,aspect,nearClippingPlane,farClippingPlane),null!==focalLength&&model.setFocalLength(focalLength);break;case 1:model=new THREE.OrthographicCamera(-width/2,width/2,height/2,-height/2,nearClippingPlane,farClippingPlane);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+type+"."),model=new THREE.Object3D}}return model},createLight:function(relationships){var model,lightAttribute;if(relationships.children.forEach((function(child){var attr=fbxTree.Objects.NodeAttribute[child.ID];void 0!==attr&&(lightAttribute=attr)})),void 0===lightAttribute)model=new THREE.Object3D;else{var type;type=void 0===lightAttribute.LightType?0:lightAttribute.LightType.value;var color=16777215;void 0!==lightAttribute.Color&&(color=(new THREE.Color).fromArray(lightAttribute.Color.value));var intensity=void 0===lightAttribute.Intensity?1:lightAttribute.Intensity.value/100;void 0!==lightAttribute.CastLightOnObject&&0===lightAttribute.CastLightOnObject.value&&(intensity=0);var distance=0;void 0!==lightAttribute.FarAttenuationEnd&&(distance=void 0!==lightAttribute.EnableFarAttenuation&&0===lightAttribute.EnableFarAttenuation.value?0:lightAttribute.FarAttenuationEnd.value);var decay=1;switch(type){case 0:model=new THREE.PointLight(color,intensity,distance,1);break;case 1:model=new THREE.DirectionalLight(color,intensity);break;case 2:var angle=Math.PI/3;void 0!==lightAttribute.InnerAngle&&(angle=THREE.MathUtils.degToRad(lightAttribute.InnerAngle.value));var penumbra=0;void 0!==lightAttribute.OuterAngle&&(penumbra=THREE.MathUtils.degToRad(lightAttribute.OuterAngle.value),penumbra=Math.max(penumbra,1)),model=new THREE.SpotLight(color,intensity,distance,angle,penumbra,1);break;default:console.warn("THREE.FBXLoader: Unknown light type "+lightAttribute.LightType.value+", defaulting to a THREE.PointLight."),model=new THREE.PointLight(color,intensity)}void 0!==lightAttribute.CastShadows&&1===lightAttribute.CastShadows.value&&(model.castShadow=!0)}return model},createMesh:function(relationships,geometryMap,materialMap){var model,geometry=null,material=null,materials=[];return relationships.children.forEach((function(child){geometryMap.has(child.ID)&&(geometry=geometryMap.get(child.ID)),materialMap.has(child.ID)&&materials.push(materialMap.get(child.ID))})),materials.length>1?material=materials:materials.length>0?material=materials[0]:(material=new THREE.MeshPhongMaterial({color:13421772}),materials.push(material)),"color"in geometry.attributes&&materials.forEach((function(material){material.vertexColors=!0})),geometry.FBX_Deformer?(materials.forEach((function(material){material.skinning=!0})),(model=new THREE.SkinnedMesh(geometry,material)).normalizeSkinWeights()):model=new THREE.Mesh(geometry,material),model},createCurve:function(relationships,geometryMap){var geometry=relationships.children.reduce((function(geo,child){return geometryMap.has(child.ID)&&(geo=geometryMap.get(child.ID)),geo}),null),material=new THREE.LineBasicMaterial({color:3342591,linewidth:1});return new THREE.Line(geometry,material)},getTransformData:function(model,modelNode){var transformData={};"InheritType"in modelNode&&(transformData.inheritType=parseInt(modelNode.InheritType.value)),transformData.eulerOrder="RotationOrder"in modelNode?getEulerOrder(modelNode.RotationOrder.value):"ZYX","Lcl_Translation"in modelNode&&(transformData.translation=modelNode.Lcl_Translation.value),"PreRotation"in modelNode&&(transformData.preRotation=modelNode.PreRotation.value),"Lcl_Rotation"in modelNode&&(transformData.rotation=modelNode.Lcl_Rotation.value),"PostRotation"in modelNode&&(transformData.postRotation=modelNode.PostRotation.value),"Lcl_Scaling"in modelNode&&(transformData.scale=modelNode.Lcl_Scaling.value),"ScalingOffset"in modelNode&&(transformData.scalingOffset=modelNode.ScalingOffset.value),"ScalingPivot"in modelNode&&(transformData.scalingPivot=modelNode.ScalingPivot.value),"RotationOffset"in modelNode&&(transformData.rotationOffset=modelNode.RotationOffset.value),"RotationPivot"in modelNode&&(transformData.rotationPivot=modelNode.RotationPivot.value),model.userData.transformData=transformData},setLookAtProperties:function(model,modelNode){var children;"LookAtProperty"in modelNode&&connections.get(model.ID).children.forEach((function(child){if("LookAtProperty"===child.relationship){var lookAtTarget=fbxTree.Objects.Model[child.ID];if("Lcl_Translation"in lookAtTarget){var pos=lookAtTarget.Lcl_Translation.value;void 0!==model.target?(model.target.position.fromArray(pos),sceneGraph.add(model.target)):model.lookAt((new THREE.Vector3).fromArray(pos))}}}))},bindSkeleton:function(skeletons,geometryMap,modelMap){var bindMatrices=this.parsePoseNodes();for(var ID in skeletons){var skeleton=skeletons[ID],parents;connections.get(parseInt(skeleton.ID)).parents.forEach((function(parent){if(geometryMap.has(parent.ID)){var geoID=parent.ID,geoRelationships;connections.get(geoID).parents.forEach((function(geoConnParent){var model;modelMap.has(geoConnParent.ID)&&modelMap.get(geoConnParent.ID).bind(new THREE.Skeleton(skeleton.bones),bindMatrices[geoConnParent.ID])}))}}))}},parsePoseNodes:function(){var bindMatrices={};if("Pose"in fbxTree.Objects){var BindPoseNode=fbxTree.Objects.Pose;for(var nodeID in BindPoseNode)if("BindPose"===BindPoseNode[nodeID].attrType){var poseNodes=BindPoseNode[nodeID].PoseNode;Array.isArray(poseNodes)?poseNodes.forEach((function(poseNode){bindMatrices[poseNode.Node]=(new THREE.Matrix4).fromArray(poseNode.Matrix.a)})):bindMatrices[poseNodes.Node]=(new THREE.Matrix4).fromArray(poseNodes.Matrix.a)}}return bindMatrices},createAmbientLight:function(){if("GlobalSettings"in fbxTree&&"AmbientColor"in fbxTree.GlobalSettings){var ambientColor=fbxTree.GlobalSettings.AmbientColor.value,r=ambientColor[0],g=ambientColor[1],b=ambientColor[2];if(0!==r||0!==g||0!==b){var color=new THREE.Color(r,g,b);sceneGraph.add(new THREE.AmbientLight(color,1))}}},setupMorphMaterials:function(){var scope=this;sceneGraph.traverse((function(child){child.isMesh&&child.geometry.morphAttributes.position&&child.geometry.morphAttributes.position.length&&(Array.isArray(child.material)?child.material.forEach((function(material,i){scope.setupMorphMaterial(child,material,i)})):scope.setupMorphMaterial(child,child.material))}))},setupMorphMaterial:function(child,material,index){var uuid=child.uuid,matUuid=material.uuid,sharedMat=!1;if(sceneGraph.traverse((function(node){node.isMesh&&(Array.isArray(node.material)?node.material.forEach((function(mat){mat.uuid===matUuid&&node.uuid!==uuid&&(sharedMat=!0)})):node.material.uuid===matUuid&&node.uuid!==uuid&&(sharedMat=!0))})),!0===sharedMat){var clonedMat=material.clone();clonedMat.morphTargets=!0,void 0===index?child.material=clonedMat:child.material[index]=clonedMat}else material.morphTargets=!0}},GeometryParser.prototype={constructor:GeometryParser,parse:function(deformers){var geometryMap=new Map;if("Geometry"in fbxTree.Objects){var geoNodes=fbxTree.Objects.Geometry;for(var nodeID in geoNodes){var relationships=connections.get(parseInt(nodeID)),geo=this.parseGeometry(relationships,geoNodes[nodeID],deformers);geometryMap.set(parseInt(nodeID),geo)}}return geometryMap},parseGeometry:function(relationships,geoNode,deformers){switch(geoNode.attrType){case"Mesh":return this.parseMeshGeometry(relationships,geoNode,deformers);case"NurbsCurve":return this.parseNurbsGeometry(geoNode)}},parseMeshGeometry:function(relationships,geoNode,deformers){var skeletons=deformers.skeletons,morphTargets=[],modelNodes=relationships.parents.map((function(parent){return fbxTree.Objects.Model[parent.ID]}));if(0!==modelNodes.length){var skeleton=relationships.children.reduce((function(skeleton,child){return void 0!==skeletons[child.ID]&&(skeleton=skeletons[child.ID]),skeleton}),null);relationships.children.forEach((function(child){void 0!==deformers.morphTargets[child.ID]&&morphTargets.push(deformers.morphTargets[child.ID])}));var modelNode=modelNodes[0],transformData={};"RotationOrder"in modelNode&&(transformData.eulerOrder=getEulerOrder(modelNode.RotationOrder.value)),"InheritType"in modelNode&&(transformData.inheritType=parseInt(modelNode.InheritType.value)),"GeometricTranslation"in modelNode&&(transformData.translation=modelNode.GeometricTranslation.value),"GeometricRotation"in modelNode&&(transformData.rotation=modelNode.GeometricRotation.value),"GeometricScaling"in modelNode&&(transformData.scale=modelNode.GeometricScaling.value);var transform=generateTransform(transformData);return this.genGeometry(geoNode,skeleton,morphTargets,transform)}},genGeometry:function(geoNode,skeleton,morphTargets,preTransform){var geo=new THREE.BufferGeometry;geoNode.attrName&&(geo.name=geoNode.attrName);var geoInfo=this.parseGeoNode(geoNode,skeleton),buffers=this.genBuffers(geoInfo),positionAttribute=new THREE.Float32BufferAttribute(buffers.vertex,3);if(positionAttribute.applyMatrix4(preTransform),geo.setAttribute("position",positionAttribute),buffers.colors.length>0&&geo.setAttribute("color",new THREE.Float32BufferAttribute(buffers.colors,3)),skeleton&&(geo.setAttribute("skinIndex",new THREE.Uint16BufferAttribute(buffers.weightsIndices,4)),geo.setAttribute("skinWeight",new THREE.Float32BufferAttribute(buffers.vertexWeights,4)),geo.FBX_Deformer=skeleton),buffers.normal.length>0){var normalMatrix=(new THREE.Matrix3).getNormalMatrix(preTransform),normalAttribute=new THREE.Float32BufferAttribute(buffers.normal,3);normalAttribute.applyNormalMatrix(normalMatrix),geo.setAttribute("normal",normalAttribute)}if(buffers.uvs.forEach((function(uvBuffer,i){var name="uv"+(i+1).toString();0===i&&(name="uv"),geo.setAttribute(name,new THREE.Float32BufferAttribute(buffers.uvs[i],2))})),geoInfo.material&&"AllSame"!==geoInfo.material.mappingType){var prevMaterialIndex=buffers.materialIndex[0],startIndex=0;if(buffers.materialIndex.forEach((function(currentIndex,i){currentIndex!==prevMaterialIndex&&(geo.addGroup(startIndex,i-startIndex,prevMaterialIndex),prevMaterialIndex=currentIndex,startIndex=i)})),geo.groups.length>0){var lastGroup=geo.groups[geo.groups.length-1],lastIndex=lastGroup.start+lastGroup.count;lastIndex!==buffers.materialIndex.length&&geo.addGroup(lastIndex,buffers.materialIndex.length-lastIndex,prevMaterialIndex)}0===geo.groups.length&&geo.addGroup(0,buffers.materialIndex.length,buffers.materialIndex[0])}return this.addMorphTargets(geo,geoNode,morphTargets,preTransform),geo},parseGeoNode:function(geoNode,skeleton){var geoInfo={};if(geoInfo.vertexPositions=void 0!==geoNode.Vertices?geoNode.Vertices.a:[],geoInfo.vertexIndices=void 0!==geoNode.PolygonVertexIndex?geoNode.PolygonVertexIndex.a:[],geoNode.LayerElementColor&&(geoInfo.color=this.parseVertexColors(geoNode.LayerElementColor[0])),geoNode.LayerElementMaterial&&(geoInfo.material=this.parseMaterialIndices(geoNode.LayerElementMaterial[0])),geoNode.LayerElementNormal&&(geoInfo.normal=this.parseNormals(geoNode.LayerElementNormal[0])),geoNode.LayerElementUV){geoInfo.uv=[];for(var i=0;geoNode.LayerElementUV[i];)geoNode.LayerElementUV[i].UV&&geoInfo.uv.push(this.parseUVs(geoNode.LayerElementUV[i])),i++}return geoInfo.weightTable={},null!==skeleton&&(geoInfo.skeleton=skeleton,skeleton.rawBones.forEach((function(rawBone,i){rawBone.indices.forEach((function(index,j){void 0===geoInfo.weightTable[index]&&(geoInfo.weightTable[index]=[]),geoInfo.weightTable[index].push({id:i,weight:rawBone.weights[j]})}))}))),geoInfo},genBuffers:function(geoInfo){var buffers={vertex:[],normal:[],colors:[],uvs:[],materialIndex:[],vertexWeights:[],weightsIndices:[]},polygonIndex=0,faceLength=0,displayedWeightsWarning=!1,facePositionIndexes=[],faceNormals=[],faceColors=[],faceUVs=[],faceWeights=[],faceWeightIndices=[],scope=this;return geoInfo.vertexIndices.forEach((function(vertexIndex,polygonVertexIndex){var endOfFace=!1;vertexIndex<0&&(vertexIndex^=-1,endOfFace=!0);var weightIndices=[],weights=[];if(facePositionIndexes.push(3*vertexIndex,3*vertexIndex+1,3*vertexIndex+2),geoInfo.color){var data=getData(polygonVertexIndex,polygonIndex,vertexIndex,geoInfo.color);faceColors.push(data[0],data[1],data[2])}if(geoInfo.skeleton){if(void 0!==geoInfo.weightTable[vertexIndex]&&geoInfo.weightTable[vertexIndex].forEach((function(wt){weights.push(wt.weight),weightIndices.push(wt.id)})),weights.length>4){displayedWeightsWarning||(console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),displayedWeightsWarning=!0);var wIndex=[0,0,0,0],Weight=[0,0,0,0];weights.forEach((function(weight,weightIndex){var currentWeight=weight,currentIndex=weightIndices[weightIndex];Weight.forEach((function(comparedWeight,comparedWeightIndex,comparedWeightArray){if(currentWeight>comparedWeight){comparedWeightArray[comparedWeightIndex]=currentWeight,currentWeight=comparedWeight;var tmp=wIndex[comparedWeightIndex];wIndex[comparedWeightIndex]=currentIndex,currentIndex=tmp}}))})),weightIndices=wIndex,weights=Weight}for(;weights.length<4;)weights.push(0),weightIndices.push(0);for(var i=0;i<4;++i)faceWeights.push(weights[i]),faceWeightIndices.push(weightIndices[i])}if(geoInfo.normal){var data=getData(polygonVertexIndex,polygonIndex,vertexIndex,geoInfo.normal);faceNormals.push(data[0],data[1],data[2])}if(geoInfo.material&&"AllSame"!==geoInfo.material.mappingType)var materialIndex=getData(polygonVertexIndex,polygonIndex,vertexIndex,geoInfo.material)[0];geoInfo.uv&&geoInfo.uv.forEach((function(uv,i){var data=getData(polygonVertexIndex,polygonIndex,vertexIndex,uv);void 0===faceUVs[i]&&(faceUVs[i]=[]),faceUVs[i].push(data[0]),faceUVs[i].push(data[1])})),faceLength++,endOfFace&&(scope.genFace(buffers,geoInfo,facePositionIndexes,materialIndex,faceNormals,faceColors,faceUVs,faceWeights,faceWeightIndices,faceLength),polygonIndex++,faceLength=0,facePositionIndexes=[],faceNormals=[],faceColors=[],faceUVs=[],faceWeights=[],faceWeightIndices=[])})),buffers},genFace:function(buffers,geoInfo,facePositionIndexes,materialIndex,faceNormals,faceColors,faceUVs,faceWeights,faceWeightIndices,faceLength){for(var i=2;i<faceLength;i++)buffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[0]]),buffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[1]]),buffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[2]]),buffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[3*(i-1)]]),buffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[3*(i-1)+1]]),buffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[3*(i-1)+2]]),buffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[3*i]]),buffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[3*i+1]]),buffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[3*i+2]]),geoInfo.skeleton&&(buffers.vertexWeights.push(faceWeights[0]),buffers.vertexWeights.push(faceWeights[1]),buffers.vertexWeights.push(faceWeights[2]),buffers.vertexWeights.push(faceWeights[3]),buffers.vertexWeights.push(faceWeights[4*(i-1)]),buffers.vertexWeights.push(faceWeights[4*(i-1)+1]),buffers.vertexWeights.push(faceWeights[4*(i-1)+2]),buffers.vertexWeights.push(faceWeights[4*(i-1)+3]),buffers.vertexWeights.push(faceWeights[4*i]),buffers.vertexWeights.push(faceWeights[4*i+1]),buffers.vertexWeights.push(faceWeights[4*i+2]),buffers.vertexWeights.push(faceWeights[4*i+3]),buffers.weightsIndices.push(faceWeightIndices[0]),buffers.weightsIndices.push(faceWeightIndices[1]),buffers.weightsIndices.push(faceWeightIndices[2]),buffers.weightsIndices.push(faceWeightIndices[3]),buffers.weightsIndices.push(faceWeightIndices[4*(i-1)]),buffers.weightsIndices.push(faceWeightIndices[4*(i-1)+1]),buffers.weightsIndices.push(faceWeightIndices[4*(i-1)+2]),buffers.weightsIndices.push(faceWeightIndices[4*(i-1)+3]),buffers.weightsIndices.push(faceWeightIndices[4*i]),buffers.weightsIndices.push(faceWeightIndices[4*i+1]),buffers.weightsIndices.push(faceWeightIndices[4*i+2]),buffers.weightsIndices.push(faceWeightIndices[4*i+3])),geoInfo.color&&(buffers.colors.push(faceColors[0]),buffers.colors.push(faceColors[1]),buffers.colors.push(faceColors[2]),buffers.colors.push(faceColors[3*(i-1)]),buffers.colors.push(faceColors[3*(i-1)+1]),buffers.colors.push(faceColors[3*(i-1)+2]),buffers.colors.push(faceColors[3*i]),buffers.colors.push(faceColors[3*i+1]),buffers.colors.push(faceColors[3*i+2])),geoInfo.material&&"AllSame"!==geoInfo.material.mappingType&&(buffers.materialIndex.push(materialIndex),buffers.materialIndex.push(materialIndex),buffers.materialIndex.push(materialIndex)),geoInfo.normal&&(buffers.normal.push(faceNormals[0]),buffers.normal.push(faceNormals[1]),buffers.normal.push(faceNormals[2]),buffers.normal.push(faceNormals[3*(i-1)]),buffers.normal.push(faceNormals[3*(i-1)+1]),buffers.normal.push(faceNormals[3*(i-1)+2]),buffers.normal.push(faceNormals[3*i]),buffers.normal.push(faceNormals[3*i+1]),buffers.normal.push(faceNormals[3*i+2])),geoInfo.uv&&geoInfo.uv.forEach((function(uv,j){void 0===buffers.uvs[j]&&(buffers.uvs[j]=[]),buffers.uvs[j].push(faceUVs[j][0]),buffers.uvs[j].push(faceUVs[j][1]),buffers.uvs[j].push(faceUVs[j][2*(i-1)]),buffers.uvs[j].push(faceUVs[j][2*(i-1)+1]),buffers.uvs[j].push(faceUVs[j][2*i]),buffers.uvs[j].push(faceUVs[j][2*i+1])}))},addMorphTargets:function(parentGeo,parentGeoNode,morphTargets,preTransform){if(0!==morphTargets.length){parentGeo.morphTargetsRelative=!0,parentGeo.morphAttributes.position=[];var scope=this;morphTargets.forEach((function(morphTarget){morphTarget.rawTargets.forEach((function(rawTarget){var morphGeoNode=fbxTree.Objects.Geometry[rawTarget.geoID];void 0!==morphGeoNode&&scope.genMorphGeometry(parentGeo,parentGeoNode,morphGeoNode,preTransform,rawTarget.name)}))}))}},genMorphGeometry:function(parentGeo,parentGeoNode,morphGeoNode,preTransform,name){for(var vertexIndices=void 0!==parentGeoNode.PolygonVertexIndex?parentGeoNode.PolygonVertexIndex.a:[],morphPositionsSparse=void 0!==morphGeoNode.Vertices?morphGeoNode.Vertices.a:[],indices=void 0!==morphGeoNode.Indexes?morphGeoNode.Indexes.a:[],length=3*parentGeo.attributes.position.count,morphPositions=new Float32Array(length),i=0;i<indices.length;i++){var morphIndex=3*indices[i];morphPositions[morphIndex]=morphPositionsSparse[3*i],morphPositions[morphIndex+1]=morphPositionsSparse[3*i+1],morphPositions[morphIndex+2]=morphPositionsSparse[3*i+2]}var morphGeoInfo={vertexIndices:vertexIndices,vertexPositions:morphPositions},morphBuffers=this.genBuffers(morphGeoInfo),positionAttribute=new THREE.Float32BufferAttribute(morphBuffers.vertex,3);positionAttribute.name=name||morphGeoNode.attrName,positionAttribute.applyMatrix4(preTransform),parentGeo.morphAttributes.position.push(positionAttribute)},parseNormals:function(NormalNode){var mappingType=NormalNode.MappingInformationType,referenceType=NormalNode.ReferenceInformationType,buffer=NormalNode.Normals.a,indexBuffer=[];return"IndexToDirect"===referenceType&&("NormalIndex"in NormalNode?indexBuffer=NormalNode.NormalIndex.a:"NormalsIndex"in NormalNode&&(indexBuffer=NormalNode.NormalsIndex.a)),{dataSize:3,buffer:buffer,indices:indexBuffer,mappingType:mappingType,referenceType:referenceType}},parseUVs:function(UVNode){var mappingType=UVNode.MappingInformationType,referenceType=UVNode.ReferenceInformationType,buffer=UVNode.UV.a,indexBuffer=[];return"IndexToDirect"===referenceType&&(indexBuffer=UVNode.UVIndex.a),{dataSize:2,buffer:buffer,indices:indexBuffer,mappingType:mappingType,referenceType:referenceType}},parseVertexColors:function(ColorNode){var mappingType=ColorNode.MappingInformationType,referenceType=ColorNode.ReferenceInformationType,buffer=ColorNode.Colors.a,indexBuffer=[];return"IndexToDirect"===referenceType&&(indexBuffer=ColorNode.ColorIndex.a),{dataSize:4,buffer:buffer,indices:indexBuffer,mappingType:mappingType,referenceType:referenceType}},parseMaterialIndices:function(MaterialNode){var mappingType=MaterialNode.MappingInformationType,referenceType=MaterialNode.ReferenceInformationType;if("NoMappingInformation"===mappingType)return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:referenceType};for(var materialIndexBuffer=MaterialNode.Materials.a,materialIndices=[],i=0;i<materialIndexBuffer.length;++i)materialIndices.push(i);return{dataSize:1,buffer:materialIndexBuffer,indices:materialIndices,mappingType:mappingType,referenceType:referenceType}},parseNurbsGeometry:function(geoNode){if(void 0===THREE.NURBSCurve)return console.error("THREE.FBXLoader: The loader relies on THREE.NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry."),new THREE.BufferGeometry;var order=parseInt(geoNode.Order);if(isNaN(order))return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",geoNode.Order,geoNode.id),new THREE.BufferGeometry;for(var degree=order-1,knots=geoNode.KnotVector.a,controlPoints=[],pointsValues=geoNode.Points.a,i=0,l=pointsValues.length,startKnot,endKnot;i<l;i+=4)controlPoints.push((new THREE.Vector4).fromArray(pointsValues,i));if("Closed"===geoNode.Form)controlPoints.push(controlPoints[0]);else if("Periodic"===geoNode.Form){startKnot=degree,endKnot=knots.length-1-startKnot;for(var i=0;i<degree;++i)controlPoints.push(controlPoints[i])}var curve,vertices=new THREE.NURBSCurve(degree,knots,controlPoints,startKnot,endKnot).getPoints(7*controlPoints.length),positions=new Float32Array(3*vertices.length);vertices.forEach((function(vertex,i){vertex.toArray(positions,3*i)}));var geometry=new THREE.BufferGeometry;return geometry.setAttribute("position",new THREE.BufferAttribute(positions,3)),geometry}},AnimationParser.prototype={constructor:AnimationParser,parse:function(){var animationClips=[],rawClips=this.parseClips();if(void 0!==rawClips)for(var key in rawClips){var rawClip=rawClips[key],clip=this.addClip(rawClip);animationClips.push(clip)}return animationClips},parseClips:function(){if(void 0!==fbxTree.Objects.AnimationCurve){var curveNodesMap=this.parseAnimationCurveNodes();this.parseAnimationCurves(curveNodesMap);var layersMap=this.parseAnimationLayers(curveNodesMap),rawClips;return this.parseAnimStacks(layersMap)}},parseAnimationCurveNodes:function(){var rawCurveNodes=fbxTree.Objects.AnimationCurveNode,curveNodesMap=new Map;for(var nodeID in rawCurveNodes){var rawCurveNode=rawCurveNodes[nodeID];if(null!==rawCurveNode.attrName.match(/S|R|T|DeformPercent/)){var curveNode={id:rawCurveNode.id,attr:rawCurveNode.attrName,curves:{}};curveNodesMap.set(curveNode.id,curveNode)}}return curveNodesMap},parseAnimationCurves:function(curveNodesMap){var rawCurves=fbxTree.Objects.AnimationCurve;for(var nodeID in rawCurves){var animationCurve={id:rawCurves[nodeID].id,times:rawCurves[nodeID].KeyTime.a.map(convertFBXTimeToSeconds),values:rawCurves[nodeID].KeyValueFloat.a},relationships=connections.get(animationCurve.id);if(void 0!==relationships){var animationCurveID=relationships.parents[0].ID,animationCurveRelationship=relationships.parents[0].relationship;animationCurveRelationship.match(/X/)?curveNodesMap.get(animationCurveID).curves.x=animationCurve:animationCurveRelationship.match(/Y/)?curveNodesMap.get(animationCurveID).curves.y=animationCurve:animationCurveRelationship.match(/Z/)?curveNodesMap.get(animationCurveID).curves.z=animationCurve:animationCurveRelationship.match(/d|DeformPercent/)&&curveNodesMap.has(animationCurveID)&&(curveNodesMap.get(animationCurveID).curves.morph=animationCurve)}}},parseAnimationLayers:function(curveNodesMap){var rawLayers=fbxTree.Objects.AnimationLayer,layersMap=new Map;for(var nodeID in rawLayers){var layerCurveNodes=[],connection=connections.get(parseInt(nodeID)),children;if(void 0!==connection)connection.children.forEach((function(child,i){if(curveNodesMap.has(child.ID)){var curveNode=curveNodesMap.get(child.ID);if(void 0!==curveNode.curves.x||void 0!==curveNode.curves.y||void 0!==curveNode.curves.z){var modelID;if(void 0===layerCurveNodes[i])if(void 0!==(modelID=connections.get(child.ID).parents.filter((function(parent){return void 0!==parent.relationship}))[0].ID)){var rawModel;if(void 0===(rawModel=fbxTree.Objects.Model[modelID.toString()]))return void console.warn("THREE.FBXLoader: Encountered a unused curve.",child);var node={modelName:rawModel.attrName?THREE.PropertyBinding.sanitizeNodeName(rawModel.attrName):"",ID:rawModel.id,initialPosition:[0,0,0],initialRotation:[0,0,0],initialScale:[1,1,1]};sceneGraph.traverse((function(child){child.ID===rawModel.id&&(node.transform=child.matrix,child.userData.transformData&&(node.eulerOrder=child.userData.transformData.eulerOrder))})),node.transform||(node.transform=new THREE.Matrix4),"PreRotation"in rawModel&&(node.preRotation=rawModel.PreRotation.value),"PostRotation"in rawModel&&(node.postRotation=rawModel.PostRotation.value),layerCurveNodes[i]=node}layerCurveNodes[i]&&(layerCurveNodes[i][curveNode.attr]=curveNode)}else if(void 0!==curveNode.curves.morph){if(void 0===layerCurveNodes[i]){var deformerID=connections.get(child.ID).parents.filter((function(parent){return void 0!==parent.relationship}))[0].ID,morpherID=connections.get(deformerID).parents[0].ID,geoID=connections.get(morpherID).parents[0].ID,modelID=connections.get(geoID).parents[0].ID,rawModel,node={modelName:(rawModel=fbxTree.Objects.Model[modelID]).attrName?THREE.PropertyBinding.sanitizeNodeName(rawModel.attrName):"",morphName:fbxTree.Objects.Deformer[deformerID].attrName};layerCurveNodes[i]=node}layerCurveNodes[i][curveNode.attr]=curveNode}}})),layersMap.set(parseInt(nodeID),layerCurveNodes)}return layersMap},parseAnimStacks:function(layersMap){var rawStacks=fbxTree.Objects.AnimationStack,rawClips={};for(var nodeID in rawStacks){var children=connections.get(parseInt(nodeID)).children;children.length>1&&console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.");var layer=layersMap.get(children[0].ID);rawClips[nodeID]={name:rawStacks[nodeID].attrName,layer:layer}}return rawClips},addClip:function(rawClip){var tracks=[],scope=this;return rawClip.layer.forEach((function(rawTracks){tracks=tracks.concat(scope.generateTracks(rawTracks))})),new THREE.AnimationClip(rawClip.name,-1,tracks)},generateTracks:function(rawTracks){var tracks=[],initialPosition=new THREE.Vector3,initialRotation=new THREE.Quaternion,initialScale=new THREE.Vector3;if(rawTracks.transform&&rawTracks.transform.decompose(initialPosition,initialRotation,initialScale),initialPosition=initialPosition.toArray(),initialRotation=(new THREE.Euler).setFromQuaternion(initialRotation,rawTracks.eulerOrder).toArray(),initialScale=initialScale.toArray(),void 0!==rawTracks.T&&Object.keys(rawTracks.T.curves).length>0){var positionTrack=this.generateVectorTrack(rawTracks.modelName,rawTracks.T.curves,initialPosition,"position");void 0!==positionTrack&&tracks.push(positionTrack)}if(void 0!==rawTracks.R&&Object.keys(rawTracks.R.curves).length>0){var rotationTrack=this.generateRotationTrack(rawTracks.modelName,rawTracks.R.curves,initialRotation,rawTracks.preRotation,rawTracks.postRotation,rawTracks.eulerOrder);void 0!==rotationTrack&&tracks.push(rotationTrack)}if(void 0!==rawTracks.S&&Object.keys(rawTracks.S.curves).length>0){var scaleTrack=this.generateVectorTrack(rawTracks.modelName,rawTracks.S.curves,initialScale,"scale");void 0!==scaleTrack&&tracks.push(scaleTrack)}if(void 0!==rawTracks.DeformPercent){var morphTrack=this.generateMorphTrack(rawTracks);void 0!==morphTrack&&tracks.push(morphTrack)}return tracks},generateVectorTrack:function(modelName,curves,initialValue,type){var times=this.getTimesForAllAxes(curves),values=this.getKeyframeTrackValues(times,curves,initialValue);return new THREE.VectorKeyframeTrack(modelName+"."+type,times,values)},generateRotationTrack:function(modelName,curves,initialValue,preRotation,postRotation,eulerOrder){void 0!==curves.x&&(this.interpolateRotations(curves.x),curves.x.values=curves.x.values.map(THREE.MathUtils.degToRad)),void 0!==curves.y&&(this.interpolateRotations(curves.y),curves.y.values=curves.y.values.map(THREE.MathUtils.degToRad)),void 0!==curves.z&&(this.interpolateRotations(curves.z),curves.z.values=curves.z.values.map(THREE.MathUtils.degToRad));var times=this.getTimesForAllAxes(curves),values=this.getKeyframeTrackValues(times,curves,initialValue);void 0!==preRotation&&((preRotation=preRotation.map(THREE.MathUtils.degToRad)).push(eulerOrder),preRotation=(new THREE.Euler).fromArray(preRotation),preRotation=(new THREE.Quaternion).setFromEuler(preRotation)),void 0!==postRotation&&((postRotation=postRotation.map(THREE.MathUtils.degToRad)).push(eulerOrder),postRotation=(new THREE.Euler).fromArray(postRotation),postRotation=(new THREE.Quaternion).setFromEuler(postRotation).invert());for(var quaternion=new THREE.Quaternion,euler=new THREE.Euler,quaternionValues=[],i=0;i<values.length;i+=3)euler.set(values[i],values[i+1],values[i+2],eulerOrder),quaternion.setFromEuler(euler),void 0!==preRotation&&quaternion.premultiply(preRotation),void 0!==postRotation&&quaternion.multiply(postRotation),quaternion.toArray(quaternionValues,i/3*4);return new THREE.QuaternionKeyframeTrack(modelName+".quaternion",times,quaternionValues)},generateMorphTrack:function(rawTracks){var curves=rawTracks.DeformPercent.curves.morph,values=curves.values.map((function(val){return val/100})),morphNum=sceneGraph.getObjectByName(rawTracks.modelName).morphTargetDictionary[rawTracks.morphName];return new THREE.NumberKeyframeTrack(rawTracks.modelName+".morphTargetInfluences["+morphNum+"]",curves.times,values)},getTimesForAllAxes:function(curves){var times=[];return void 0!==curves.x&&(times=times.concat(curves.x.times)),void 0!==curves.y&&(times=times.concat(curves.y.times)),void 0!==curves.z&&(times=times.concat(curves.z.times)),times=times.sort((function(a,b){return a-b})).filter((function(elem,index,array){return array.indexOf(elem)==index}))},getKeyframeTrackValues:function(times,curves,initialValue){var prevValue=initialValue,values=[],xIndex=-1,yIndex=-1,zIndex=-1;return times.forEach((function(time){if(curves.x&&(xIndex=curves.x.times.indexOf(time)),curves.y&&(yIndex=curves.y.times.indexOf(time)),curves.z&&(zIndex=curves.z.times.indexOf(time)),-1!==xIndex){var xValue=curves.x.values[xIndex];values.push(xValue),prevValue[0]=xValue}else values.push(prevValue[0]);if(-1!==yIndex){var yValue=curves.y.values[yIndex];values.push(yValue),prevValue[1]=yValue}else values.push(prevValue[1]);if(-1!==zIndex){var zValue=curves.z.values[zIndex];values.push(zValue),prevValue[2]=zValue}else values.push(prevValue[2])})),values},interpolateRotations:function(curve){for(var i=1;i<curve.values.length;i++){var initialValue=curve.values[i-1],valuesSpan=curve.values[i]-initialValue,absoluteSpan=Math.abs(valuesSpan);if(absoluteSpan>=180){for(var numSubIntervals=absoluteSpan/180,step=valuesSpan/numSubIntervals,nextValue=initialValue+step,initialTime=curve.times[i-1],timeSpan,interval=(curve.times[i]-initialTime)/numSubIntervals,nextTime=initialTime+interval,interpolatedTimes=[],interpolatedValues=[];nextTime<curve.times[i];)interpolatedTimes.push(nextTime),nextTime+=interval,interpolatedValues.push(nextValue),nextValue+=step;curve.times=inject(curve.times,i,interpolatedTimes),curve.values=inject(curve.values,i,interpolatedValues)}}}},TextParser.prototype={constructor:TextParser,getPrevNode:function(){return this.nodeStack[this.currentIndent-2]},getCurrentNode:function(){return this.nodeStack[this.currentIndent-1]},getCurrentProp:function(){return this.currentProp},pushStack:function(node){this.nodeStack.push(node),this.currentIndent+=1},popStack:function(){this.nodeStack.pop(),this.currentIndent-=1},setCurrentProp:function(val,name){this.currentProp=val,this.currentPropName=name},parse:function(text){this.currentIndent=0,this.allNodes=new FBXTree,this.nodeStack=[],this.currentProp=[],this.currentPropName="";var scope=this,split=text.split(/[\r\n]+/);return split.forEach((function(line,i){var matchComment=line.match(/^[\s\t]*;/),matchEmpty=line.match(/^[\s\t]*$/);if(!matchComment&&!matchEmpty){var matchBeginning=line.match("^\\t{"+scope.currentIndent+"}(\\w+):(.*){",""),matchProperty=line.match("^\\t{"+scope.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)"),matchEnd=line.match("^\\t{"+(scope.currentIndent-1)+"}}");matchBeginning?scope.parseNodeBegin(line,matchBeginning):matchProperty?scope.parseNodeProperty(line,matchProperty,split[++i]):matchEnd?scope.popStack():line.match(/^[^\s\t}]/)&&scope.parseNodePropertyContinued(line)}})),this.allNodes},parseNodeBegin:function(line,property){var nodeName=property[1].trim().replace(/^"/,"").replace(/"$/,""),nodeAttrs=property[2].split(",").map((function(attr){return attr.trim().replace(/^"/,"").replace(/"$/,"")})),node={name:nodeName},attrs=this.parseNodeAttr(nodeAttrs),currentNode=this.getCurrentNode();0===this.currentIndent?this.allNodes.add(nodeName,node):nodeName in currentNode?("PoseNode"===nodeName?currentNode.PoseNode.push(node):void 0!==currentNode[nodeName].id&&(currentNode[nodeName]={},currentNode[nodeName][currentNode[nodeName].id]=currentNode[nodeName]),""!==attrs.id&&(currentNode[nodeName][attrs.id]=node)):"number"==typeof attrs.id?(currentNode[nodeName]={},currentNode[nodeName][attrs.id]=node):"Properties70"!==nodeName&&(currentNode[nodeName]="PoseNode"===nodeName?[node]:node),"number"==typeof attrs.id&&(node.id=attrs.id),""!==attrs.name&&(node.attrName=attrs.name),""!==attrs.type&&(node.attrType=attrs.type),this.pushStack(node)},parseNodeAttr:function(attrs){var id=attrs[0];""!==attrs[0]&&(id=parseInt(attrs[0]),isNaN(id)&&(id=attrs[0]));var name="",type="";return attrs.length>1&&(name=attrs[1].replace(/^(\w+)::/,""),type=attrs[2]),{id:id,name:name,type:type}},parseNodeProperty:function(line,property,contentLine){var propName=property[1].replace(/^"/,"").replace(/"$/,"").trim(),propValue=property[2].replace(/^"/,"").replace(/"$/,"").trim();"Content"===propName&&","===propValue&&(propValue=contentLine.replace(/"/g,"").replace(/,$/,"").trim());var currentNode=this.getCurrentNode(),parentName;if("Properties70"!==currentNode.name){if("C"===propName){var connProps=propValue.split(",").slice(1),from=parseInt(connProps[0]),to=parseInt(connProps[1]),rest=propValue.split(",").slice(3);propName="connections",append(propValue=[from,to],rest=rest.map((function(elem){return elem.trim().replace(/^"/,"")}))),void 0===currentNode[propName]&&(currentNode[propName]=[])}"Node"===propName&&(currentNode.id=propValue),propName in currentNode&&Array.isArray(currentNode[propName])?currentNode[propName].push(propValue):"a"!==propName?currentNode[propName]=propValue:currentNode.a=propValue,this.setCurrentProp(currentNode,propName),"a"===propName&&","!==propValue.slice(-1)&&(currentNode.a=parseNumberArray(propValue))}else this.parseNodeSpecialProperty(line,propName,propValue)},parseNodePropertyContinued:function(line){var currentNode=this.getCurrentNode();currentNode.a+=line,","!==line.slice(-1)&&(currentNode.a=parseNumberArray(currentNode.a))},parseNodeSpecialProperty:function(line,propName,propValue){var props=propValue.split('",').map((function(prop){return prop.trim().replace(/^\"/,"").replace(/\s/,"_")})),innerPropName=props[0],innerPropType1=props[1],innerPropType2=props[2],innerPropFlag=props[3],innerPropValue=props[4];switch(innerPropType1){case"int":case"enum":case"bool":case"ULongLong":case"double":case"Number":case"FieldOfView":innerPropValue=parseFloat(innerPropValue);break;case"Color":case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":innerPropValue=parseNumberArray(innerPropValue)}this.getPrevNode()[innerPropName]={type:innerPropType1,type2:innerPropType2,flag:innerPropFlag,value:innerPropValue},this.setCurrentProp(this.getPrevNode(),innerPropName)}},BinaryParser.prototype={constructor:BinaryParser,parse:function(buffer){var reader=new BinaryReader(buffer);reader.skip(23);var version=reader.getUint32();if(version<6400)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+version);for(var allNodes=new FBXTree;!this.endOfContent(reader);){var node=this.parseNode(reader,version);null!==node&&allNodes.add(node.name,node)}return allNodes},endOfContent:function(reader){return reader.size()%16==0?(reader.getOffset()+160+16&-16)>=reader.size():reader.getOffset()+160+16>=reader.size()},parseNode:function(reader,version){var node={},endOffset=version>=7500?reader.getUint64():reader.getUint32(),numProperties=version>=7500?reader.getUint64():reader.getUint32();version>=7500?reader.getUint64():reader.getUint32();var nameLen=reader.getUint8(),name=reader.getString(nameLen);if(0===endOffset)return null;for(var propertyList=[],i=0;i<numProperties;i++)propertyList.push(this.parseProperty(reader));var id=propertyList.length>0?propertyList[0]:"",attrName=propertyList.length>1?propertyList[1]:"",attrType=propertyList.length>2?propertyList[2]:"";for(node.singleProperty=1===numProperties&&reader.getOffset()===endOffset;endOffset>reader.getOffset();){var subNode=this.parseNode(reader,version);null!==subNode&&this.parseSubNode(name,node,subNode)}return node.propertyList=propertyList,"number"==typeof id&&(node.id=id),""!==attrName&&(node.attrName=attrName),""!==attrType&&(node.attrType=attrType),""!==name&&(node.name=name),node},parseSubNode:function(name,node,subNode){if(!0===subNode.singleProperty){var value=subNode.propertyList[0];Array.isArray(value)?(node[subNode.name]=subNode,subNode.a=value):node[subNode.name]=value}else if("Connections"===name&&"C"===subNode.name){var array=[];subNode.propertyList.forEach((function(property,i){0!==i&&array.push(property)})),void 0===node.connections&&(node.connections=[]),node.connections.push(array)}else if("Properties70"===subNode.name){var keys;Object.keys(subNode).forEach((function(key){node[key]=subNode[key]}))}else if("Properties70"===name&&"P"===subNode.name){var innerPropName=subNode.propertyList[0],innerPropType1=subNode.propertyList[1],innerPropType2=subNode.propertyList[2],innerPropFlag=subNode.propertyList[3],innerPropValue;0===innerPropName.indexOf("Lcl ")&&(innerPropName=innerPropName.replace("Lcl ","Lcl_")),0===innerPropType1.indexOf("Lcl ")&&(innerPropType1=innerPropType1.replace("Lcl ","Lcl_")),innerPropValue="Color"===innerPropType1||"ColorRGB"===innerPropType1||"Vector"===innerPropType1||"Vector3D"===innerPropType1||0===innerPropType1.indexOf("Lcl_")?[subNode.propertyList[4],subNode.propertyList[5],subNode.propertyList[6]]:subNode.propertyList[4],node[innerPropName]={type:innerPropType1,type2:innerPropType2,flag:innerPropFlag,value:innerPropValue}}else void 0===node[subNode.name]?"number"==typeof subNode.id?(node[subNode.name]={},node[subNode.name][subNode.id]=subNode):node[subNode.name]=subNode:"PoseNode"===subNode.name?(Array.isArray(node[subNode.name])||(node[subNode.name]=[node[subNode.name]]),node[subNode.name].push(subNode)):void 0===node[subNode.name][subNode.id]&&(node[subNode.name][subNode.id]=subNode)},parseProperty:function(reader){var type=reader.getString(1);switch(type){case"C":return reader.getBoolean();case"D":return reader.getFloat64();case"F":return reader.getFloat32();case"I":return reader.getInt32();case"L":return reader.getInt64();case"R":var length=reader.getUint32();return reader.getArrayBuffer(length);case"S":var length=reader.getUint32();return reader.getString(length);case"Y":return reader.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":var arrayLength=reader.getUint32(),encoding=reader.getUint32(),compressedLength=reader.getUint32();if(0===encoding)switch(type){case"b":case"c":return reader.getBooleanArray(arrayLength);case"d":return reader.getFloat64Array(arrayLength);case"f":return reader.getFloat32Array(arrayLength);case"i":return reader.getInt32Array(arrayLength);case"l":return reader.getInt64Array(arrayLength)}"undefined"==typeof Inflate&&console.error("THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js");var inflate,reader2=new BinaryReader(new Inflate(new Uint8Array(reader.getArrayBuffer(compressedLength))).decompress().buffer);switch(type){case"b":case"c":return reader2.getBooleanArray(arrayLength);case"d":return reader2.getFloat64Array(arrayLength);case"f":return reader2.getFloat32Array(arrayLength);case"i":return reader2.getInt32Array(arrayLength);case"l":return reader2.getInt64Array(arrayLength)}default:throw new Error("THREE.FBXLoader: Unknown property type "+type)}}},BinaryReader.prototype={constructor:BinaryReader,getOffset:function(){return this.offset},size:function(){return this.dv.buffer.byteLength},skip:function(length){this.offset+=length},getBoolean:function(){return 1==(1&this.getUint8())},getBooleanArray:function(size){for(var a=[],i=0;i<size;i++)a.push(this.getBoolean());return a},getUint8:function(){var value=this.dv.getUint8(this.offset);return this.offset+=1,value},getInt16:function(){var value=this.dv.getInt16(this.offset,this.littleEndian);return this.offset+=2,value},getInt32:function(){var value=this.dv.getInt32(this.offset,this.littleEndian);return this.offset+=4,value},getInt32Array:function(size){for(var a=[],i=0;i<size;i++)a.push(this.getInt32());return a},getUint32:function(){var value=this.dv.getUint32(this.offset,this.littleEndian);return this.offset+=4,value},getInt64:function(){var low,high;return this.littleEndian?(low=this.getUint32(),high=this.getUint32()):(high=this.getUint32(),low=this.getUint32()),2147483648&high?(high=4294967295&~high,4294967295===(low=4294967295&~low)&&(high=high+1&4294967295),-(4294967296*high+(low=low+1&4294967295))):4294967296*high+low},getInt64Array:function(size){for(var a=[],i=0;i<size;i++)a.push(this.getInt64());return a},getUint64:function(){var low,high;return this.littleEndian?(low=this.getUint32(),high=this.getUint32()):(high=this.getUint32(),low=this.getUint32()),4294967296*high+low},getFloat32:function(){var value=this.dv.getFloat32(this.offset,this.littleEndian);return this.offset+=4,value},getFloat32Array:function(size){for(var a=[],i=0;i<size;i++)a.push(this.getFloat32());return a},getFloat64:function(){var value=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,value},getFloat64Array:function(size){for(var a=[],i=0;i<size;i++)a.push(this.getFloat64());return a},getArrayBuffer:function(size){var value=this.dv.buffer.slice(this.offset,this.offset+size);return this.offset+=size,value},getString:function(size){for(var a=[],i=0;i<size;i++)a[i]=this.getUint8();var nullByte=a.indexOf(0);return nullByte>=0&&(a=a.slice(0,nullByte)),THREE.LoaderUtils.decodeText(new Uint8Array(a))}},FBXTree.prototype={constructor:FBXTree,add:function(key,val){this[key]=val}};var dataArray=[];function getData(polygonVertexIndex,polygonIndex,vertexIndex,infoObject){var index;switch(infoObject.mappingType){case"ByPolygonVertex":index=polygonVertexIndex;break;case"ByPolygon":index=polygonIndex;break;case"ByVertice":index=vertexIndex;break;case"AllSame":index=infoObject.indices[0];break;default:console.warn("THREE.FBXLoader: unknown attribute mapping type "+infoObject.mappingType)}"IndexToDirect"===infoObject.referenceType&&(index=infoObject.indices[index]);var from=index*infoObject.dataSize,to=from+infoObject.dataSize;return slice(dataArray,infoObject.buffer,from,to)}var tempEuler=new THREE.Euler,tempVec=new THREE.Vector3;function generateTransform(transformData){var lTranslationM=new THREE.Matrix4,lPreRotationM=new THREE.Matrix4,lRotationM=new THREE.Matrix4,lPostRotationM=new THREE.Matrix4,lScalingM=new THREE.Matrix4,lScalingPivotM=new THREE.Matrix4,lScalingOffsetM=new THREE.Matrix4,lRotationOffsetM=new THREE.Matrix4,lRotationPivotM=new THREE.Matrix4,lParentGX=new THREE.Matrix4,lGlobalT=new THREE.Matrix4,inheritType=transformData.inheritType?transformData.inheritType:0,array,array,array;(transformData.translation&&lTranslationM.setPosition(tempVec.fromArray(transformData.translation)),transformData.preRotation)&&((array=transformData.preRotation.map(THREE.MathUtils.degToRad)).push(transformData.eulerOrder),lPreRotationM.makeRotationFromEuler(tempEuler.fromArray(array)));transformData.rotation&&((array=transformData.rotation.map(THREE.MathUtils.degToRad)).push(transformData.eulerOrder),lRotationM.makeRotationFromEuler(tempEuler.fromArray(array)));transformData.postRotation&&((array=transformData.postRotation.map(THREE.MathUtils.degToRad)).push(transformData.eulerOrder),lPostRotationM.makeRotationFromEuler(tempEuler.fromArray(array)));transformData.scale&&lScalingM.scale(tempVec.fromArray(transformData.scale)),transformData.scalingOffset&&lScalingOffsetM.setPosition(tempVec.fromArray(transformData.scalingOffset)),transformData.scalingPivot&&lScalingPivotM.setPosition(tempVec.fromArray(transformData.scalingPivot)),transformData.rotationOffset&&lRotationOffsetM.setPosition(tempVec.fromArray(transformData.rotationOffset)),transformData.rotationPivot&&lRotationPivotM.setPosition(tempVec.fromArray(transformData.rotationPivot)),transformData.parentMatrixWorld&&(lParentGX=transformData.parentMatrixWorld);var lLRM=lPreRotationM.multiply(lRotationM).multiply(lPostRotationM),lParentGRM=new THREE.Matrix4,lParentTM;lParentGX.extractRotation(lParentGRM),(new THREE.Matrix4).copyPosition(lParentGX);var lParentGSM=new THREE.Matrix4;lParentGSM.copy(lParentGRM).invert().multiply(lParentGX);var lGlobalRS=new THREE.Matrix4;if(0===inheritType)lGlobalRS.copy(lParentGRM).multiply(lLRM).multiply(lParentGSM).multiply(lScalingM);else if(1===inheritType)lGlobalRS.copy(lParentGRM).multiply(lParentGSM).multiply(lLRM).multiply(lScalingM);else{var lParentLSM_inv=new THREE.Matrix4;lParentLSM_inv.copy(lScalingM).invert();var lParentGSM_noLocal=(new THREE.Matrix4).multiply(lParentGSM).multiply(lParentLSM_inv);lGlobalRS.copy(lParentGRM).multiply(lLRM).multiply(lParentGSM_noLocal).multiply(lScalingM)}var lRotationPivotM_inv=new THREE.Matrix4;lRotationPivotM_inv.copy(lRotationPivotM).invert();var lScalingPivotM_inv=new THREE.Matrix4;lScalingPivotM_inv.copy(lScalingPivotM).invert();var lTransform=new THREE.Matrix4;lTransform.copy(lTranslationM).multiply(lRotationOffsetM).multiply(lRotationPivotM).multiply(lPreRotationM).multiply(lRotationM).multiply(lPostRotationM).multiply(lRotationPivotM_inv).multiply(lScalingOffsetM).multiply(lScalingPivotM).multiply(lScalingM).multiply(lScalingPivotM_inv);var lLocalTWithAllPivotAndOffsetInfo=(new THREE.Matrix4).copyPosition(lTransform),lGlobalTranslation=(new THREE.Matrix4).copy(lParentGX).multiply(lLocalTWithAllPivotAndOffsetInfo);return lGlobalT.copyPosition(lGlobalTranslation),lTransform=(new THREE.Matrix4).multiply(lGlobalT).multiply(lGlobalRS)}function getEulerOrder(order){var enums=["ZYX","YZX","XZY","ZXY","YXZ","XYZ"];return 6===(order=order||0)?(console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect."),enums[0]):enums[order]}function parseNumberArray(value){var array;return value.split(",").map((function(val){return parseFloat(val)}))}function convertArrayBufferToString(buffer,from,to){return void 0===from&&(from=0),void 0===to&&(to=buffer.byteLength),THREE.LoaderUtils.decodeText(new Uint8Array(buffer,from,to))}function append(a,b){for(var i=0,j=a.length,l=b.length;i<l;i++,j++)a[j]=b[i]}function slice(a,b,from,to){for(var i=from,j=0;i<to;i++,j++)a[j]=b[i];return a}function inject(a1,index,a2){return a1.slice(0,index).concat(a2).concat(a1.slice(index))}return FBXLoader}();